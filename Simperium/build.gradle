apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)
apply plugin: 'maven'

buildscript {
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'com.novoda:bintray-release:0.9.1'
    }

    repositories {
        google()
        jcenter()
    }
}

version gitVersion()

group "com.simperium"

repositories {
    google()
    jcenter()
}

android {
    buildToolsVersion "28.0.3"
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        versionName project.version

        // Calculating PIN for certificate: OU=Domain Control Validated, CN=*.simperium.com
        // Pin Value: e25695097d04927c9d90206333a687a7b1f99708
        buildConfigField 'String', 'SIMPERIUM_COM_SPKI', '"e25695097d04927c9d90206333a687a7b1f99708"'
    }

    defaultPublishConfig 'clientRelease'

    dependencies {
        androidTestImplementation 'androidx.test:core:1.2.0'
        androidTestImplementation 'androidx.test:runner:1.2.0'

        implementation 'androidx.appcompat:appcompat:1.0.2'
        implementation 'com.google.android.material:material:1.1.0-alpha07'
        implementation 'com.google.code.gson:gson:2.8.5'
        implementation 'com.koushikdutta.async:androidasync:2.1.3@jar'
        implementation 'org.thoughtcrime.ssl.pinning:AndroidPinning:1.0.0'
    }

    flavorDimensions "main"

    productFlavors {
        // client is the main production build
        client {
            dimension "main"
        }

        // support build is for running tests and includes mock code
        support {
            dimension "main"
        }
    }

    useLibrary 'android.test.base'
    useLibrary 'android.test.runner'
    useLibrary 'org.apache.http.legacy'
}

task versionConfig(group: "build", description: "Generate version class") {
    def dir = "${buildDir}/generated/source/version"
    def file = new File(dir, "com/simperium/Version.java")

    android.sourceSets.main.java.srcDir dir

    doLast {
        def describe = gitDescribe()

        logger.info "Version: ${describe}"

        file.getParentFile().mkdirs()
        def writer = new FileWriter(file)
        writer.write("""/* auto-generated file do not modify */
package com.simperium;

public final class Version {

    public static final String LIBRARY_NAME = "android";

    public static final String NAME = "android-${project.version}";

    /* project.version */
    public static final String NUMBER = "${project.version}";

    /* git rev-parse --short --verify HEAD */
    public static final String BUILD = "${gitHash()}";

    /* git describe --always --dirty=-dirty */
    public static final String DESCRIBE = "${gitDescribe()}";
}
""")
        writer.close()
    }
}

tasks.preBuild.dependsOn versionConfig

publish {
    artifactId = 'simperium'
    userOrg = 'simperium'
    groupId = 'com.simperium.android'
    uploadName = 'simperium'
    desc = 'Android library for building applications using Simperium'
    publishVersion = '0.8.0'
    licences = ['MIT']
    website = 'https://github.com/Simperium/simperium-android'
    dryRun = 'false'
    autoPublish = 'true'
    publications = ['clientRelease']
}
