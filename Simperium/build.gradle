
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies { classpath 'com.android.tools.build:gradle:0.11.+' }
}

apply plugin: 'android-library'
apply plugin: 'maven'

version gitVersion()

group "com.simperium"

repositories {
    mavenCentral()
    maven { url "http://simperium.github.io/simperium-android" }
}

android {
  
    publishNonDefault true

    dependencies {
        compile 'com.koushikdutta.async:androidasync:1.2.6'
        compile 'com.android:volley:4.4.2.1'
    }

    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        applicationId "com.simperium"
        versionCode 1
        versionName project.version
    }

    productFlavors {
        // client is the main production build
        client
        // support build is for running tests and includes mock code
        support
    }

}

task versionConfig(group: "build", description: "Generate version class") {
    def dir = "${buildDir}/generated/source/version"
    def file = new File(dir, "com/simperium/Version.java")

    android.sourceSets.main.java.srcDir dir

    doLast {
        def describe = gitDescribe()

        logger.info "Version: ${describe}"

        file.getParentFile().mkdirs()
        def writer = new FileWriter(file)
        writer.write("""/* auto-generated file do not modify */
package com.simperium;

public final class Version {

    public static final String LIBRARY_NAME = "android";

    public static final String NAME = "android-${project.version}";

    /* project.version */
    public static final String NUMBER = "${project.version}";

    /* git rev-parse --short --verify HEAD */
    public static final String BUILD = "${gitHash()}";

    /* git describe --always --dirty=-dirty */
    public static final String DESCRIBE = "${gitDescribe()}";
}
""")
        writer.close()
    }
}

if (project.hasProperty("repository")) {
  afterEvaluate {
    uploadArchives {
      repositories {
        mavenDeployer {
          repository(url: project.repository)
          pom.version = project.version
          pom.artifactId = 'simperium-android'
        }
      }
    }
  }
}

tasks.preBuild.dependsOn versionConfig
